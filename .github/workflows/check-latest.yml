name: Check Latest Talosctl Version

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Get latest Talosctl release tag
        id: get_latest
        run: |
          tag=$(curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | jq -r .tag_name)
          echo "Latest Talosctl tag: $tag"
          echo "latest_tag=$tag" >> $GITHUB_OUTPUT
      - name: Check if image tag already exists in GHCR
        id: check_ghcr
        env:
          GHCR_USER: joscha-alisch
          GHCR_REPO: talosctl
          GHCR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_tag="${{ steps.get_latest.outputs.latest_tag }}"
          token=$(curl -s "https://ghcr.io/token?service=ghcr.io&scope=repository:${GHCR_USER}/${GHCR_REPO}:pull" -u "$GHCR_USER:$GHCR_PAT" | jq -r '.token')
          response=$(curl -s -H "Authorization: Bearer $token" https://ghcr.io/v2/${GHCR_USER}/${GHCR_REPO}/tags/list)
          if [ -z "$response" ] || ! echo "$response" | jq -e .tags > /dev/null; then
            echo "Failed to fetch tags or no tags found in the response:"
            echo "$response"
            exit 1
          else
            tags=$(echo "$response" | jq -r '.tags[]')
            if echo "$tags" | grep -q "^$latest_tag$"; then
              echo "Image with tag $latest_tag already exists."
              echo "should_build=false" >> $GITHUB_OUTPUT
            else
              echo "Tag $latest_tag not found. Will trigger build."
              echo "should_build=true" >> $GITHUB_OUTPUT
            fi
          fi
      - name: Trigger build workflow
        if: steps.check_ghcr.outputs.should_build == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build-image.yml
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: |
            talosctl_version: ${{ steps.get_latest.outputs.latest_tag }}
